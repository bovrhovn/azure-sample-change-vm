@page
@using Microsoft.Azure.Management.Compute.Fluent
@model ListPageModel

@{
    ViewData["Title"] = "VM operations";
}

<h1 class="display-4">
    VM operations
</h1>
<p>
    Check below list of VM registered in your VM and select operations
</p>

<table class="table table-hover">
    <tr>
        <td>
            Name
        </td>
        <td>
            Plan
        </td>
        <td>
            Operating system
        </td>
        <td>
            Powerstate
        </td>
        <td>...</td>
    </tr>
    @foreach (var azureVm in Model.Vms)
    {
        <tr>
            <td>@azureVm.ComputerName</td>
            <td>@azureVm.Plan.Name</td>
            <td>@azureVm.Size</td>
            <td>@azureVm.PowerState.Value</td>
            <td>
                @if (azureVm.PowerState == PowerState.Stopped || azureVm.PowerState == PowerState.Deallocated)
                {
                    <form method="post">
                        <input type="hidden" asp-for="VirtualMachineId" value="@azureVm.VMId"/>
                        <input type="hidden" asp-for="IsShutdown" value="true"/>
                        <button type="submit">
                            <i class="fas fa-play"></i>
                        </button>
                    </form>
                }
                else
                {
                    <form method="post">
                        <input type="hidden" asp-for="VirtualMachineId" value="@azureVm.VMId"/>
                        <input type="hidden" asp-for="IsShutdown" value="false"/>
                        <button type="submit">
                            <i class="fas fa-play"></i>
                        </button>
                    </form>
                }
                &nbsp;
                <a asp-page="/Details" asp-route-id="@azureVm.VMId"><i class="fas fa-arrow-right"></i></a>
            </td>
        </tr>
    }
</table>

<div class="col-md-12 mb-3" id="messages"></div>

@section Scripts
{
    <script type="text/javascript" src="~/js/signalr.min.js"></script>
    <script type="text/javascript">
            document.addEventListener('DOMContentLoaded', function () {
                 function createMessageEntry(encodedMsg) {
                    const entry = document.createElement('div');
                    entry.classList.add("message-entry");
                    entry.classList.add("text-center");
                    entry.innerHTML = `<div class="text-center broadcast-message">${encodedMsg}</div>`;                    
                    return entry;
                 }
                 
                 function bindConnectionMessage(connection) {
                    let messageCallback = function(message) {                        
                        const messageEntry = createMessageEntry(message);                                    
                        const messageBox = document.getElementById('messages');
                        messageBox.appendChild(messageEntry);
                        messageBox.scrollTop = messageBox.scrollHeight;
                    };                    
                    connection.on('broadcastMessage', messageCallback);
                    connection.onclose(onConnectionError);
                }
                      
                function onConnectionError(error) {
                    if (error && error.message) {
                        console.error(error.message);
                    }                    
                }
    
                let connection = new signalR.HubConnectionBuilder()
                                            .withUrl('/notification')
                                            .build();
                bindConnectionMessage(connection);
                connection.start().catch(function (error) {
                        console.error(error.message);
                    });
            });
        </script>
}